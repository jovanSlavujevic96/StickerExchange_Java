/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sticker.frontend;

import java.util.Map;
import java.awt.Checkbox;
import java.awt.Color;
import java.awt.Dimension;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Jovan
 */
public class ExchangeMenu extends javax.swing.JFrame {

    final private StickerClientMainWindow parent;
    final Map<Integer, Checkbox> otherDuplicateChecboxMap;
    final Map<Integer, Checkbox> otherMissingChecboxMap;
    final private PrintWriter pw;
    final private String otherUserName;
    final private JPanel otherDuplicatePanel;
    final private JPanel otherMissingPanel;
    
    final private static Dimension PANEL_DIMENSION = new Dimension(250, 300);
    final private static String EXCHANQE_REQ_KEYWORD = "ExchangeReq:";
    
    private void spawnCheckboxes() {
        int offsetX = 0;
        int offsetY = 0;
        
        for (int sticker : parent.getOtherDuplicates(otherUserName)) {
            Checkbox cb = new Checkbox(Integer.toString(sticker));
            if ((offsetX + StickerCollection.CHECKBOX_WIDTH + StickerCollection.CHECKBOX_OFFSET) > otherDuplicatePanel.getWidth()) {
                offsetX = 0;
                offsetY += StickerCollection.CHECKBOX_HEIGHT + StickerCollection.CHECKBOX_OFFSET;
            }
            cb.setBounds(otherDuplicatePanel.getLocation().x + offsetX, otherDuplicatePanel.getLocation().y + offsetY, StickerCollection.CHECKBOX_WIDTH, StickerCollection.CHECKBOX_HEIGHT);
            otherDuplicateChecboxMap.put(sticker, cb);
            otherDuplicatePanel.add(cb);
            offsetX += StickerCollection.CHECKBOX_WIDTH + StickerCollection.CHECKBOX_OFFSET;
        }
        
        otherDuplicatePanel.revalidate();
        otherDuplicatePanel.repaint();
        
        offsetX = 0;
        offsetY = 0;
        
        for (int sticker : parent.getOtherMissing(otherUserName)) {
            Checkbox cb = new Checkbox(Integer.toString(sticker));
            if ((offsetX + StickerCollection.CHECKBOX_WIDTH + StickerCollection.CHECKBOX_OFFSET) > otherMissingPanel.getWidth()) {
                offsetX = 0;
                offsetY += StickerCollection.CHECKBOX_HEIGHT + StickerCollection.CHECKBOX_OFFSET;
            }
            cb.setBounds(otherMissingPanel.getLocation().x + offsetX, otherMissingPanel.getLocation().y + offsetY, StickerCollection.CHECKBOX_WIDTH, StickerCollection.CHECKBOX_HEIGHT);
            otherMissingChecboxMap.put(sticker, cb);
            otherMissingPanel.add(cb);
            offsetX += StickerCollection.CHECKBOX_WIDTH + StickerCollection.CHECKBOX_OFFSET;
        }

        otherMissingPanel.revalidate();
        otherMissingPanel.repaint();
    }
    
    private void overridableCalls() {
        
        otherDuplicatePanel.setSize(PANEL_DIMENSION);
        otherDuplicatePanel.setLocation(5, this.getY() + this.getHeight() - PANEL_DIMENSION.height - 45);
        otherDuplicatePanel.setBorder(BorderFactory.createLineBorder(Color.black));

        otherMissingPanel.setSize(PANEL_DIMENSION);
        otherMissingPanel.setLocation(this.getWidth() - PANEL_DIMENSION.width - 20, this.getHeight() - PANEL_DIMENSION.height - 45);
        otherMissingPanel.setBorder(BorderFactory.createLineBorder(Color.black));
        
        this.add(otherDuplicatePanel);
        this.add(otherMissingPanel);

        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.spawnCheckboxes();
    }
    
    /**
     * Creates new form ExchangeMenu
     * @param parent
     * @param otherUsername
     */
    public ExchangeMenu(StickerClientMainWindow parent, String otherUsername) {
        super("RAZMENA: " + parent.getUserName() + " i " + otherUsername.split(" ")[0]);
        initComponents();
        
        otherDuplicatePanel = new JPanel();
        otherMissingPanel = new JPanel();
        
        otherDuplicateChecboxMap = new HashMap();
        otherMissingChecboxMap = new HashMap();

        this.parent = parent;
        this.pw = parent.getPw();
        this.otherUserName = otherUsername;

        this.overridableCalls();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSendRequest = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("OVO NUDIM");

        jLabel2.setText("OVO TRAZIM");

        btnSendRequest.setText("Posalji zahtev");
        btnSendRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendRequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel2)
                .addGap(150, 150, 150)
                .addComponent(btnSendRequest)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(98, 98, 98))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(btnSendRequest))
                .addContainerGap(337, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendRequestActionPerformed
        ArrayList<Integer> checkedDuplicateCbs = new ArrayList();
        ArrayList<Integer> checkedMissingCbs = new ArrayList();
        
        for (int key : otherDuplicateChecboxMap.keySet()) {
            if (otherDuplicateChecboxMap.get(key).getState()){
                checkedDuplicateCbs.add(key);
            }
        }
        
        if (checkedDuplicateCbs.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate izbrati nesto sto " + otherUserName.split(" ")[0] + " nudi.");
            return;
        }
        
        for (int key : otherMissingChecboxMap.keySet()) {
            if (otherMissingChecboxMap.get(key).getState()){
                checkedMissingCbs.add(key);
            }
        }
        
        if (checkedMissingCbs.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate ponuditi nesto sto treba " + otherUserName.split(" ")[0] + ".");
            return;
        }
        
        if (checkedDuplicateCbs.size() != checkedMissingCbs.size()) {
            JOptionPane.showMessageDialog(this, "Razmena je samo 1:1");
            return;
        }
        
        String msg = EXCHANQE_REQ_KEYWORD;
        for (int sticker : checkedDuplicateCbs) {
            msg += Integer.toString(sticker) + " ";
        }
        msg += "|";
        for (int sticker : checkedMissingCbs) {
            msg += Integer.toString(sticker) + " ";
        }
        msg += "____";
        msg += parent.getUserName() + "=" + otherUserName.split(" ")[0];
        
        pw.println(msg);
    }//GEN-LAST:event_btnSendRequestActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSendRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

}
