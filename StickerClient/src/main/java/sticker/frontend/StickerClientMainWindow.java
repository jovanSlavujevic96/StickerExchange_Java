/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sticker.frontend;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/**
 *
 * @author Jovan
 */
public class StickerClientMainWindow extends javax.swing.JFrame {

    private static final String USERNAME_KEYWORD = "MyUserName:";
    private static final String REMOVED_MISSING_KEYWORD = "RemovedMissing:";
    private static final String REMOVED_DUPLICATES_KEYWORD = "RemovedDuplicates:";
    private static final String EXCHANGE_POSSIBILITIES_REQ_KEYWORD = "ExchangePossibilities.";
    
    private Socket socket;
    private BufferedReader br;
    private PrintWriter pw;
    private ReceiveMessageFromServer rmfs;
    private String userName;
    final private Map<String, ExchangeInfo> exchangeUsersMap;
    
    private StickerCollection missingStickersUI;
    private StickerCollection duplicateStickersUI;
    
    private class ExchangeInfo {
        public ArrayList<Integer> otherDuplicates;
        public ArrayList<Integer> otherMissing;
        
        public ExchangeInfo(String[] otherDuplicates, String[] otherMissing) {
            this.otherDuplicates = new ArrayList();
            this.otherMissing = new ArrayList();
            
            for (String duplicate : otherDuplicates) {
                this.otherDuplicates.add(Integer.parseInt(duplicate));
            }
            
            for (String missing : otherMissing) {
                this.otherMissing.add(Integer.parseInt(missing));
            }
            
            Collections.sort(this.otherDuplicates);
            Collections.sort(this.otherMissing);
        }
    }
    
    public ArrayList<Integer> getOtherDuplicates(String otherUsername) {
        return exchangeUsersMap.get(otherUsername).otherDuplicates;
    }
    
    public ArrayList<Integer> getOtherMissing(String otherUsername) {
        return exchangeUsersMap.get(otherUsername).otherMissing;
    }
    
    public BufferedReader getBr() {
        return br;
    }
    
    public PrintWriter getPw() {
        return pw;
    }
    
    public StickerCollection getMissingStickersUI() {
        return missingStickersUI;
    }
    
    public StickerCollection getDuplicateStickersUI() {
        return duplicateStickersUI;
    }
    
    public String getUserName() {
        return userName;
    }
    
    public void setUsername(String username) {
        this.userName = username;
    }
    
    public void appendUser(String name, String[] otherDuplicates, String[] otherMissing) {
        exchangeUsersMap.put(name, new ExchangeInfo(otherDuplicates, otherMissing));
        comboExchange.addItem(name);
        btnCheckStickers.setEnabled(true);
    }
    
    /**
     * Creates new form StickerClientMainWindow
     */
    public StickerClientMainWindow() {
        initComponents();
        exchangeUsersMap = new HashMap();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnMissing1 = new javax.swing.JButton();
        btnConnect = new javax.swing.JButton();
        btnSendUserName = new javax.swing.JButton();
        tfMyName = new javax.swing.JTextField();
        btnExchangePossibilities = new javax.swing.JButton();
        comboExchange = new javax.swing.JComboBox<>();
        btnDuplicates = new javax.swing.JButton();
        btnMissing = new javax.swing.JButton();
        btnCheckStickers = new javax.swing.JButton();

        btnMissing1.setText("Slicice koje fale");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnConnect.setText("Konektuj se");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        btnSendUserName.setText("Registruj se");
        btnSendUserName.setEnabled(false);
        btnSendUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendUserNameActionPerformed(evt);
            }
        });

        tfMyName.setEnabled(false);

        btnExchangePossibilities.setText("Moguce zamene");
        btnExchangePossibilities.setEnabled(false);
        btnExchangePossibilities.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExchangePossibilitiesActionPerformed(evt);
            }
        });

        comboExchange.setEnabled(false);
        comboExchange.setName(""); // NOI18N

        btnDuplicates.setText("Slicice duplikati");
        btnDuplicates.setEnabled(false);
        btnDuplicates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDuplicatesActionPerformed(evt);
            }
        });

        btnMissing.setText("Slicice koje fale");
        btnMissing.setEnabled(false);
        btnMissing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMissingActionPerformed(evt);
            }
        });

        btnCheckStickers.setText("Pogledaj slicice");
        btnCheckStickers.setEnabled(false);
        btnCheckStickers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckStickersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSendUserName)
                            .addComponent(btnExchangePossibilities))
                        .addGap(18, 18, 18)
                        .addComponent(tfMyName, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(253, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnConnect)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnMissing)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDuplicates))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addComponent(comboExchange, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCheckStickers, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(12, 12, 12))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExchangePossibilities)
                    .addComponent(comboExchange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheckStickers))
                .addGap(196, 258, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSendUserName)
                    .addComponent(tfMyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConnect)
                    .addComponent(btnMissing)
                    .addComponent(btnDuplicates))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        try {
            this.socket = new Socket("127.0.0.1", 6001);
            this.br = new BufferedReader(new InputStreamReader(this.socket.getInputStream()));
            this.pw = new PrintWriter(new OutputStreamWriter(this.socket.getOutputStream()), true);
            
            this.missingStickersUI = new StickerCollection("Slicice koje mi nedostaju", this.pw, REMOVED_MISSING_KEYWORD);
            this.duplicateStickersUI = new StickerCollection("Slicice koje imam viska", this.pw, REMOVED_DUPLICATES_KEYWORD);
            
            this.missingStickersUI.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
            this.duplicateStickersUI.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);

            this.rmfs = new ReceiveMessageFromServer(this);
            Thread thr = new Thread(rmfs);
            thr.start();

            btnConnect.setEnabled(false);
            btnSendUserName.setEnabled(true);
            tfMyName.setEnabled(true);

        } catch (IOException ex) {
            Logger.getLogger(StickerClientMainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnSendUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendUserNameActionPerformed

        if (!tfMyName.getText().equals("")) {
            tfMyName.setEnabled(false);
            btnSendUserName.setEnabled(false);
            
            userName = tfMyName.getText();
            this.setTitle("MENJAZA " + userName);
            missingStickersUI.setTitle(missingStickersUI.getTitle() + " (" + userName + ")");
            duplicateStickersUI.setTitle(duplicateStickersUI.getTitle() + " (" + userName + ")");
            
            btnMissing.setEnabled(true);
            btnDuplicates.setEnabled(true);
            comboExchange.setEnabled(true);
            btnExchangePossibilities.setEnabled(true);
            
            pw.println(USERNAME_KEYWORD + userName);
        }
    }//GEN-LAST:event_btnSendUserNameActionPerformed

    private void btnExchangePossibilitiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExchangePossibilitiesActionPerformed
        btnCheckStickers.setEnabled(false);
        comboExchange.removeAllItems();
        exchangeUsersMap.clear();
        pw.println(EXCHANGE_POSSIBILITIES_REQ_KEYWORD);
    }//GEN-LAST:event_btnExchangePossibilitiesActionPerformed

    private void btnMissingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMissingActionPerformed
        missingStickersUI.setVisible(true);
    }//GEN-LAST:event_btnMissingActionPerformed

    private void btnDuplicatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDuplicatesActionPerformed
        duplicateStickersUI.setVisible(true);
    }//GEN-LAST:event_btnDuplicatesActionPerformed

    private void btnCheckStickersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckStickersActionPerformed
        String otherUserName;
        try {
            otherUserName = comboExchange.getSelectedItem().toString();
        } catch (java.lang.NullPointerException ex) {
            return;
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ExchangeMenu(this, otherUserName).setVisible(true);
        });
    }//GEN-LAST:event_btnCheckStickersActionPerformed
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StickerClientMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StickerClientMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StickerClientMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StickerClientMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new StickerClientMainWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckStickers;
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnDuplicates;
    private javax.swing.JButton btnExchangePossibilities;
    private javax.swing.JButton btnMissing;
    private javax.swing.JButton btnMissing1;
    private javax.swing.JButton btnSendUserName;
    private javax.swing.JComboBox<String> comboExchange;
    private javax.swing.JTextField tfMyName;
    // End of variables declaration//GEN-END:variables
}
